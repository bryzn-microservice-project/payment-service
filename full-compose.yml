services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: B1LY1mLYRmq4Ua3Af0HcKg
    volumes:
      - ./kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  traefik:
    container_name: traefik
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"      # For HTTP traffic
      - "9090:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.bryzn.com`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafdrop.rule=Host(`kafdrop.bryzn.com`)"
      - "traefik.http.routers.kafdrop.entrypoints=web"
      - "traefik.http.services.kafdrop.loadbalancer.server.port=9000"

  akhq:
    container_name: akhq
    image: tchiotludo/akhq
    volumes:
      - ./application.yml:/app/application.yml
    ports:
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.akhq.rule=Host(`akhq.bryzn.com`)"
      - "traefik.http.routers.akhq.entrypoints=web"
      - "traefik.http.services.akhq.loadbalancer.server.port=8080"
      
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bryzndb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # api-gateway:8081
  # movie-service:8082
  # notification-service:8083
  # payment-service:8084
  # seating-service:8085
  # user-management-service:8086
  # gui-service:8087

  api-gateway:
    image: apigw
    container_name: api-gateway
    environment:
      - SERVER_PORT=8081
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_CONFIG_LOCATION=file:/app/config/
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      kafka:
        condition: service_healthy
      kafdrop:
        condition: service_started
      traefik:
        condition: service_started
    volumes:
    - ./config/application.properties:/app/config/application.properties
    ports:
      - "8081:8081"

  payment-service:
    image: ps
    container_name: payment-service
    environment:
      SERVER_PORT: 8084
      SPRING_CONFIG_LOCATION: file:/app/config/
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bryzndb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src/main/resources/application.properties:/app/config/application.properties
    ports:
      - "8084:8084"
  
  seating-service:
    image: ss
    container_name: seating-service
    environment:
      SERVER_PORT: 8085
      SPRING_CONFIG_LOCATION: file:/app/config/
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bryzndb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src/main/resources/application.properties:/app/config/application.properties
    ports:
      - "8085:8085"

volumes:
  pgdata: